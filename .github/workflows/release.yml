name: Release

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags like v0.1.0, v0.2.0, etc.

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Required for creating releases

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history for changelog generation

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-ci.txt
          pip install -r requirements-dev.txt

      - name: Run tests
        run: |
          pytest tests/ -m "not hardware" --cov=ha_enviro_plus --cov-report=xml

      - name: Build package
        run: |
          python -m pip install build twine
          python -m build
          twine check dist/*

      - name: Install git-cliff
        run: |
          curl -L https://github.com/orhun/git-cliff/releases/download/v1.4.0/git-cliff-1.4.0-x86_64-unknown-linux-gnu.tar.gz | tar -xz
          ls -la git-cliff-1.4.0/
          sudo mv git-cliff-1.4.0/git-cliff /usr/local/bin/

      - name: Generate changelog
        id: changelog
        run: |
          git-cliff --config cliff.toml --verbose --output CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract changelog content
        id: extract_changelog
        run: |
          # Extract version from tag (remove 'v' prefix)
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT

          # Extract changelog content for release notes
          if [ -f CHANGELOG.md ]; then
            # Get the latest version section
            CHANGELOG_CONTENT=$(awk '/^## \[/ {p=1; next} /^## \[/ && p {p=0} p' CHANGELOG.md | head -n -1)
            echo "changelog<<EOF" >> $GITHUB_OUTPUT
            echo "$CHANGELOG_CONTENT" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "changelog=Release $VERSION" >> $GITHUB_OUTPUT
          fi

      - name: Upload to PyPI
        run: |
          pip install twine
          twine upload dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ steps.extract_changelog.outputs.version }}
          body: |
            ## What's Changed

            ${{ steps.extract_changelog.outputs.changelog }}

            ## Installation

            **Recommended (PyPI):**
            ```bash
            pip install ha-enviro-plus
            ```

            **Or use the install script:**
            ```bash
            bash <(wget -qO- https://raw.githubusercontent.com/JeffLuckett/ha-enviro-plus/main/scripts/install.sh)
            ```

            ## Files

            **Source Code (zip)**: [Download](https://github.com/JeffLuckett/ha-enviro-plus/archive/${{ github.ref_name }}.zip)
            **Source Code (tar.gz)**: [Download](https://github.com/JeffLuckett/ha-enviro-plus/archive/${{ github.ref_name }}.tar.gz)

            ## Verification

            - ✅ All tests passed
            - ✅ Code quality checks passed
            - ✅ Package builds successfully
            - ✅ Security scan completed
          draft: false
          prerelease: ${{ contains(github.ref_name, 'alpha') || contains(github.ref_name, 'beta') || contains(github.ref_name, 'rc') }}
          files: |
            ./dist/ha_enviro_plus-${{ steps.extract_changelog.outputs.version }}-py3-none-any.whl
            ./dist/ha_enviro-plus-${{ steps.extract_changelog.outputs.version }}.tar.gz
